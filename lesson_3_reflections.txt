When would you want to use a remote repository rather than keeping all your work local?

Using a remote repository allows sharing one's work with others.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because you normally do not want to share all the intermediate stages of your work, but rather share only those versions which fully add or modify a particular feature.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are a GitHub feature, and do not involve any local repository. Cloning can happen either between two GitHub repos, or between two local repositories. Branches are on local repositories.

What is the benefit of having a copy of the last known state of the remote stored locally?

This allows one to be as up-to-date with the origin (the remote repository) as possible in the absence of a connection to the Internet.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

An alternative to Git and GitHub could be a shared folder on a resource on the Cloud such as Google Drive. This would involve much less effort to learn how to use the resource, but it would not offer the full range of version control features that are present in Git/GitHub. A more primitive solution is to just send the document back and forth by e-mail between the collaborators. The main advantage of a version control system like Git is that different versions of the same document need not be saved, as the information about changes is recorded as metadata.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

We may want to have a collaborator look at our suggestions and approve them before changing the official version of our project.

